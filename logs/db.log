(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); (params None)
(0.003) CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); args=None; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "ad_surface_surface" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(255) NOT NULL, "description" text NOT NULL, "width" integer NOT NULL, "height" integer NOT NULL, "price" integer NOT NULL, "address" varchar(255) NOT NULL, "place" varchar(255) NOT NULL, "is_active" bool NOT NULL); (params None)
(0.000) CREATE TABLE "ad_surface_surface" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(255) NOT NULL, "description" text NOT NULL, "width" integer NOT NULL, "height" integer NOT NULL, "price" integer NOT NULL, "address" varchar(255) NOT NULL, "place" varchar(255) NOT NULL, "is_active" bool NOT NULL); args=None; alias=default
CREATE TABLE "ad_surface_surfaceimage" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "image" varchar(100) NOT NULL, "surface_id" bigint NOT NULL REFERENCES "ad_surface_surface" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "ad_surface_surfaceimage" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "image" varchar(100) NOT NULL, "surface_id" bigint NOT NULL REFERENCES "ad_surface_surface" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
CREATE INDEX "ad_surface_surfaceimage_surface_id_45afaba5" ON "ad_surface_surfaceimage" ("surface_id"); (params ())
(0.000) CREATE INDEX "ad_surface_surfaceimage_surface_id_45afaba5" ON "ad_surface_surfaceimage" ("surface_id"); args=(); alias=default
(0.016) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('ad_surface', '0001_initial', '2024-02-26 13:37:01.319694') RETURNING "django_migrations"."id"; args=('ad_surface', '0001_initial', '2024-02-26 13:37:01.319694'); alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
(0.000) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
(0.000) CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); args=(); alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-02-26 13:37:01.325055') RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', '2024-02-26 13:37:01.325055'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "new__django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL); (params None)
(0.000) CREATE TABLE "new__django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL); args=None; alias=default
INSERT INTO "new__django_content_type" ("id", "app_label", "model", "name") SELECT "id", "app_label", "model", "name" FROM "django_content_type"; (params ())
(0.000) INSERT INTO "new__django_content_type" ("id", "app_label", "model", "name") SELECT "id", "app_label", "model", "name" FROM "django_content_type"; args=(); alias=default
DROP TABLE "django_content_type"; (params ())
(0.000) DROP TABLE "django_content_type"; args=(); alias=default
ALTER TABLE "new__django_content_type" RENAME TO "django_content_type"; (params ())
(0.001) ALTER TABLE "new__django_content_type" RENAME TO "django_content_type"; args=(); alias=default
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
(0.000) CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); args=(); alias=default
ALTER TABLE "django_content_type" DROP COLUMN "name"; (params ())
(0.000) ALTER TABLE "django_content_type" DROP COLUMN "name"; args=(); alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-02-26 13:37:01.333910') RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', '2024-02-26 13:37:01.333910'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL); (params None)
(0.000) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL); args=None; alias=default
CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); (params None)
(0.000) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params ())
(0.000) CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); args=(); alias=default
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params ())
(0.000) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=(); alias=default
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id"); (params ())
(0.000) CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id"); args=(); alias=default
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params ())
(0.000) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=(); alias=default
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params ())
(0.000) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=(); alias=default
(0.002) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-02-26 13:37:01.347384') RETURNING "django_migrations"."id"; args=('auth', '0001_initial', '2024-02-26 13:37:01.347384'); alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "new__auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL); (params None)
(0.000) CREATE TABLE "new__auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL); args=None; alias=default
INSERT INTO "new__auth_permission" ("id", "content_type_id", "codename", "name") SELECT "id", "content_type_id", "codename", "name" FROM "auth_permission"; (params ())
(0.000) INSERT INTO "new__auth_permission" ("id", "content_type_id", "codename", "name") SELECT "id", "content_type_id", "codename", "name" FROM "auth_permission"; args=(); alias=default
DROP TABLE "auth_permission"; (params ())
(0.000) DROP TABLE "auth_permission"; args=(); alias=default
ALTER TABLE "new__auth_permission" RENAME TO "auth_permission"; (params ())
(0.001) ALTER TABLE "new__auth_permission" RENAME TO "auth_permission"; args=(); alias=default
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params ())
(0.000) CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); args=(); alias=default
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params ())
(0.000) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=(); alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-02-26 13:37:01.354720') RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', '2024-02-26 13:37:01.354720'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-02-26 13:37:01.360059') RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', '2024-02-26 13:37:01.360059'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-02-26 13:37:01.365444') RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', '2024-02-26 13:37:01.365444'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.012) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-02-26 13:37:01.382960') RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', '2024-02-26 13:37:01.382960'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-02-26 13:37:01.385697') RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', '2024-02-26 13:37:01.385697'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-02-26 13:37:01.392893') RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', '2024-02-26 13:37:01.392893'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-02-26 13:37:01.398193') RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', '2024-02-26 13:37:01.398193'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-02-26 13:37:01.403342') RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', '2024-02-26 13:37:01.403342'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "new__auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE); (params None)
(0.000) CREATE TABLE "new__auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE); args=None; alias=default
INSERT INTO "new__auth_group" ("id", "name") SELECT "id", "name" FROM "auth_group"; (params ())
(0.000) INSERT INTO "new__auth_group" ("id", "name") SELECT "id", "name" FROM "auth_group"; args=(); alias=default
DROP TABLE "auth_group"; (params ())
(0.000) DROP TABLE "auth_group"; args=(); alias=default
ALTER TABLE "new__auth_group" RENAME TO "auth_group"; (params ())
(0.001) ALTER TABLE "new__auth_group" RENAME TO "auth_group"; args=(); alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-02-26 13:37:01.410888') RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', '2024-02-26 13:37:01.410888'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.002) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-02-26 13:37:01.417217') RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', '2024-02-26 13:37:01.417217'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-02-26 13:37:01.422643') RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', '2024-02-26 13:37:01.422643'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "customer_company" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(150) NOT NULL, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "name" varchar(100) NOT NULL, "phone" varchar(10) NOT NULL, "legal_address" varchar(100) NOT NULL, "actual_address" varchar(100) NOT NULL, "inn" varchar(12) NOT NULL, "kpp" varchar(9) NOT NULL, "ogrn" varchar(13) NOT NULL, "checking_account" varchar(20) NOT NULL, "correspondent_account" varchar(20) NOT NULL, "bik" varchar(9) NOT NULL, "bank_name" varchar(100) NOT NULL, "bank_address" varchar(100) NOT NULL, "is_agency" bool NOT NULL, "agency_id" bigint NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.001) CREATE TABLE "customer_company" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(150) NOT NULL, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "name" varchar(100) NOT NULL, "phone" varchar(10) NOT NULL, "legal_address" varchar(100) NOT NULL, "actual_address" varchar(100) NOT NULL, "inn" varchar(12) NOT NULL, "kpp" varchar(9) NOT NULL, "ogrn" varchar(13) NOT NULL, "checking_account" varchar(20) NOT NULL, "correspondent_account" varchar(20) NOT NULL, "bik" varchar(9) NOT NULL, "bank_name" varchar(100) NOT NULL, "bank_address" varchar(100) NOT NULL, "is_agency" bool NOT NULL, "agency_id" bigint NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "customer_company_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "customer_company_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "customer_placement" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "start_at" date NOT NULL, "duration" bigint NOT NULL, "invoice" varchar(100) NULL, "reconciliation" varchar(100) NULL, "contract_number" varchar(255) NULL, "installation_cost" integer NULL, "dismantling_cost" integer NULL, "production_cost" integer NULL, "placement_cost" integer NULL, "accruals" integer NULL, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "surface_id" bigint NOT NULL REFERENCES "ad_surface_surface" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "customer_placement" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "start_at" date NOT NULL, "duration" bigint NOT NULL, "invoice" varchar(100) NULL, "reconciliation" varchar(100) NULL, "contract_number" varchar(255) NULL, "installation_cost" integer NULL, "dismantling_cost" integer NULL, "production_cost" integer NULL, "placement_cost" integer NULL, "accruals" integer NULL, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "surface_id" bigint NOT NULL REFERENCES "ad_surface_surface" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "customer_placementfile" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "file" varchar(100) NOT NULL, "placement_id" bigint NOT NULL REFERENCES "customer_placement" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "customer_placementfile" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "file" varchar(100) NOT NULL, "placement_id" bigint NOT NULL REFERENCES "customer_placement" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
CREATE TABLE "new__customer_company" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(150) NOT NULL, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "name" varchar(100) NOT NULL, "phone" varchar(10) NOT NULL, "legal_address" varchar(100) NOT NULL, "actual_address" varchar(100) NOT NULL, "inn" varchar(12) NOT NULL, "kpp" varchar(9) NOT NULL, "ogrn" varchar(13) NOT NULL, "checking_account" varchar(20) NOT NULL, "correspondent_account" varchar(20) NOT NULL, "bik" varchar(9) NOT NULL, "bank_name" varchar(100) NOT NULL, "bank_address" varchar(100) NOT NULL, "is_agency" bool NOT NULL, "agency_id" bigint NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "new__customer_company" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(150) NOT NULL, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "name" varchar(100) NOT NULL, "phone" varchar(10) NOT NULL, "legal_address" varchar(100) NOT NULL, "actual_address" varchar(100) NOT NULL, "inn" varchar(12) NOT NULL, "kpp" varchar(9) NOT NULL, "ogrn" varchar(13) NOT NULL, "checking_account" varchar(20) NOT NULL, "correspondent_account" varchar(20) NOT NULL, "bik" varchar(9) NOT NULL, "bank_name" varchar(100) NOT NULL, "bank_address" varchar(100) NOT NULL, "is_agency" bool NOT NULL, "agency_id" bigint NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
INSERT INTO "new__customer_company" ("id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "name", "phone", "legal_address", "actual_address", "inn", "kpp", "ogrn", "checking_account", "correspondent_account", "bik", "bank_name", "bank_address", "is_agency", "agency_id") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "name", "phone", "legal_address", "actual_address", "inn", "kpp", "ogrn", "checking_account", "correspondent_account", "bik", "bank_name", "bank_address", "is_agency", "agency_id" FROM "customer_company"; (params ())
(0.000) INSERT INTO "new__customer_company" ("id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "name", "phone", "legal_address", "actual_address", "inn", "kpp", "ogrn", "checking_account", "correspondent_account", "bik", "bank_name", "bank_address", "is_agency", "agency_id") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "name", "phone", "legal_address", "actual_address", "inn", "kpp", "ogrn", "checking_account", "correspondent_account", "bik", "bank_name", "bank_address", "is_agency", "agency_id" FROM "customer_company"; args=(); alias=default
DROP TABLE "customer_company"; (params ())
(0.000) DROP TABLE "customer_company"; args=(); alias=default
ALTER TABLE "new__customer_company" RENAME TO "customer_company"; (params ())
(0.001) ALTER TABLE "new__customer_company" RENAME TO "customer_company"; args=(); alias=default
CREATE UNIQUE INDEX "customer_company_groups_company_id_group_id_7f52136d_uniq" ON "customer_company_groups" ("company_id", "group_id"); (params ())
(0.000) CREATE UNIQUE INDEX "customer_company_groups_company_id_group_id_7f52136d_uniq" ON "customer_company_groups" ("company_id", "group_id"); args=(); alias=default
CREATE INDEX "customer_company_groups_company_id_56e18165" ON "customer_company_groups" ("company_id"); (params ())
(0.000) CREATE INDEX "customer_company_groups_company_id_56e18165" ON "customer_company_groups" ("company_id"); args=(); alias=default
CREATE INDEX "customer_company_groups_group_id_9292401f" ON "customer_company_groups" ("group_id"); (params ())
(0.000) CREATE INDEX "customer_company_groups_group_id_9292401f" ON "customer_company_groups" ("group_id"); args=(); alias=default
CREATE INDEX "customer_placement_company_id_99109aaf" ON "customer_placement" ("company_id"); (params ())
(0.000) CREATE INDEX "customer_placement_company_id_99109aaf" ON "customer_placement" ("company_id"); args=(); alias=default
CREATE INDEX "customer_placement_surface_id_93fa38af" ON "customer_placement" ("surface_id"); (params ())
(0.000) CREATE INDEX "customer_placement_surface_id_93fa38af" ON "customer_placement" ("surface_id"); args=(); alias=default
CREATE INDEX "customer_placementfile_placement_id_2973d3cd" ON "customer_placementfile" ("placement_id"); (params ())
(0.000) CREATE INDEX "customer_placementfile_placement_id_2973d3cd" ON "customer_placementfile" ("placement_id"); args=(); alias=default
CREATE INDEX "customer_company_agency_id_afc13802" ON "customer_company" ("agency_id"); (params ())
(0.000) CREATE INDEX "customer_company_agency_id_afc13802" ON "customer_company" ("agency_id"); args=(); alias=default
CREATE TABLE "customer_company_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "customer_company_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
CREATE UNIQUE INDEX "customer_company_user_permissions_company_id_permission_id_e167c63d_uniq" ON "customer_company_user_permissions" ("company_id", "permission_id"); (params ())
(0.000) CREATE UNIQUE INDEX "customer_company_user_permissions_company_id_permission_id_e167c63d_uniq" ON "customer_company_user_permissions" ("company_id", "permission_id"); args=(); alias=default
CREATE INDEX "customer_company_user_permissions_company_id_2be8d4ee" ON "customer_company_user_permissions" ("company_id"); (params ())
(0.000) CREATE INDEX "customer_company_user_permissions_company_id_2be8d4ee" ON "customer_company_user_permissions" ("company_id"); args=(); alias=default
CREATE INDEX "customer_company_user_permissions_permission_id_67a675dc" ON "customer_company_user_permissions" ("permission_id"); (params ())
(0.000) CREATE INDEX "customer_company_user_permissions_permission_id_67a675dc" ON "customer_company_user_permissions" ("permission_id"); args=(); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('customer', '0001_initial', '2024-02-26 13:37:01.462917') RETURNING "django_migrations"."id"; args=('customer', '0001_initial', '2024-02-26 13:37:01.462917'); alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
(0.000) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params ())
(0.000) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=(); alias=default
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params ())
(0.000) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=(); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-02-26 13:37:01.474854') RETURNING "django_migrations"."id"; args=('admin', '0001_initial', '2024-02-26 13:37:01.474854'); alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "new__django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL); (params None)
(0.000) CREATE TABLE "new__django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL); args=None; alias=default
INSERT INTO "new__django_admin_log" ("id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time") SELECT "id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time" FROM "django_admin_log"; (params ())
(0.000) INSERT INTO "new__django_admin_log" ("id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time") SELECT "id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time" FROM "django_admin_log"; args=(); alias=default
DROP TABLE "django_admin_log"; (params ())
(0.000) DROP TABLE "django_admin_log"; args=(); alias=default
ALTER TABLE "new__django_admin_log" RENAME TO "django_admin_log"; (params ())
(0.001) ALTER TABLE "new__django_admin_log" RENAME TO "django_admin_log"; args=(); alias=default
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params ())
(0.000) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=(); alias=default
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params ())
(0.000) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=(); alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-02-26 13:37:01.487139') RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', '2024-02-26 13:37:01.487139'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-02-26 13:37:01.495808') RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', '2024-02-26 13:37:01.495808'); alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
(0.000) PRAGMA foreign_keys; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); (params None)
(0.001) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); args=None; alias=default
(0.000) PRAGMA foreign_key_check; args=None; alias=default
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params ())
(0.000) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=(); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) PRAGMA foreign_keys = ON; args=None; alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-02-26 13:37:01.502277') RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', '2024-02-26 13:37:01.502277'); alias=default
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
(0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
(0.000) BEGIN; args=None; alias=default
(0.002) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group'); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group'); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 4, 'add_contenttype'), ('Can change content type', 4, 'change_contenttype'), ('Can delete content type', 4, 'delete_contenttype'), ('Can view content type', 4, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 4, 'add_contenttype', 'Can change content type', 4, 'change_contenttype', 'Can delete content type', 4, 'delete_contenttype', 'Can view content type', 4, 'view_contenttype'); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 5, 'add_session'), ('Can change session', 5, 'change_session'), ('Can delete session', 5, 'delete_session'), ('Can view session', 5, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 5, 'add_session', 'Can change session', 5, 'change_session', 'Can delete session', 5, 'delete_session', 'Can view session', 5, 'view_session'); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'ad_surface'; args=('ad_surface',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('ad_surface', 'surface'), ('ad_surface', 'surfaceimage') RETURNING "django_content_type"."id"; args=('ad_surface', 'surface', 'ad_surface', 'surfaceimage'); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'ad_surface' AND "django_content_type"."model" = 'surface') LIMIT 21; args=('ad_surface', 'surface'); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'ad_surface' AND "django_content_type"."model" = 'surfaceimage') LIMIT 21; args=('ad_surface', 'surfaceimage'); alias=default
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6, 7); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add surface', 6, 'add_surface'), ('Can change surface', 6, 'change_surface'), ('Can delete surface', 6, 'delete_surface'), ('Can view surface', 6, 'view_surface'), ('Can add surface image', 7, 'add_surfaceimage'), ('Can change surface image', 7, 'change_surfaceimage'), ('Can delete surface image', 7, 'delete_surfaceimage'), ('Can view surface image', 7, 'view_surfaceimage') RETURNING "auth_permission"."id"; args=('Can add surface', 6, 'add_surface', 'Can change surface', 6, 'change_surface', 'Can delete surface', 6, 'delete_surface', 'Can view surface', 6, 'view_surface', 'Can add surface image', 7, 'add_surfaceimage', 'Can change surface image', 7, 'change_surfaceimage', 'Can delete surface image', 7, 'delete_surfaceimage', 'Can view surface image', 7, 'view_surfaceimage'); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'ad_surface'; args=('ad_surface',); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customer'; args=('customer',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('customer', 'company'), ('customer', 'placement'), ('customer', 'placementfile') RETURNING "django_content_type"."id"; args=('customer', 'company', 'customer', 'placement', 'customer', 'placementfile'); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customer' AND "django_content_type"."model" = 'company') LIMIT 21; args=('customer', 'company'); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customer' AND "django_content_type"."model" = 'placement') LIMIT 21; args=('customer', 'placement'); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customer' AND "django_content_type"."model" = 'placementfile') LIMIT 21; args=('customer', 'placementfile'); alias=default
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add user', 8, 'add_company'), ('Can change user', 8, 'change_company'), ('Can delete user', 8, 'delete_company'), ('Can view user', 8, 'view_company'), ('Can add placement', 9, 'add_placement'), ('Can change placement', 9, 'change_placement'), ('Can delete placement', 9, 'delete_placement'), ('Can view placement', 9, 'view_placement'), ('Can add placement file', 10, 'add_placementfile'), ('Can change placement file', 10, 'change_placementfile'), ('Can delete placement file', 10, 'delete_placementfile'), ('Can view placement file', 10, 'view_placementfile') RETURNING "auth_permission"."id"; args=('Can add user', 8, 'add_company', 'Can change user', 8, 'change_company', 'Can delete user', 8, 'delete_company', 'Can view user', 8, 'view_company', 'Can add placement', 9, 'add_placement', 'Can change placement', 9, 'change_placement', 'Can delete placement', 9, 'delete_placement', 'Can view placement', 9, 'view_placement', 'Can add placement file', 10, 'add_placementfile', 'Can change placement file', 10, 'change_placementfile', 'Can delete placement file', 10, 'delete_placementfile', 'Can view placement file', 10, 'view_placementfile'); alias=default
(0.001) COMMIT; args=None; alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customer'; args=('customer',); alias=default
(0.001) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
(0.007) SELECT "ad_surface_surface"."id", "ad_surface_surface"."name" FROM "ad_surface_surface" WHERE (NOT EXISTS(SELECT 1 AS "a" FROM "customer_placement" U0 WHERE ((django_format_dtdelta('+', U0."start_at", U0."duration")) > '2024-02-26' AND U0."surface_id" = ("ad_surface_surface"."id")) LIMIT 1) AND "ad_surface_surface"."is_active"); args=(1, '2024-02-26'); alias=default
(0.020) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2024-02-26 13:38:14.343350' AND "django_session"."session_key" = 'exrf4hccux649akh2n880ifbkpp9lykk') LIMIT 21; args=('2024-02-26 13:38:14.343350', 'exrf4hccux649akh2n880ifbkpp9lykk'); alias=default
CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); (params None)
CREATE TABLE "ad_surface_surface" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(255) NOT NULL, "description" text NOT NULL, "width" integer NOT NULL, "height" integer NOT NULL, "price" integer NOT NULL, "address" varchar(255) NOT NULL, "place" varchar(255) NOT NULL, "is_active" bool NOT NULL); (params None)
CREATE TABLE "ad_surface_surfaceimage" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "image" varchar(100) NOT NULL, "surface_id" bigint NOT NULL REFERENCES "ad_surface_surface" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE INDEX "ad_surface_surfaceimage_surface_id_45afaba5" ON "ad_surface_surfaceimage" ("surface_id"); (params ())
CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
CREATE TABLE "new__django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL); (params None)
INSERT INTO "new__django_content_type" ("id", "app_label", "model", "name") SELECT "id", "app_label", "model", "name" FROM "django_content_type"; (params ())
DROP TABLE "django_content_type"; (params ())
ALTER TABLE "new__django_content_type" RENAME TO "django_content_type"; (params ())
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
ALTER TABLE "django_content_type" DROP COLUMN "name"; (params ())
CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL); (params None)
CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); (params None)
CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params ())
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params ())
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id"); (params ())
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params ())
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params ())
CREATE TABLE "new__auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL); (params None)
INSERT INTO "new__auth_permission" ("id", "content_type_id", "codename", "name") SELECT "id", "content_type_id", "codename", "name" FROM "auth_permission"; (params ())
DROP TABLE "auth_permission"; (params ())
ALTER TABLE "new__auth_permission" RENAME TO "auth_permission"; (params ())
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params ())
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params ())
CREATE TABLE "new__auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE); (params None)
INSERT INTO "new__auth_group" ("id", "name") SELECT "id", "name" FROM "auth_group"; (params ())
DROP TABLE "auth_group"; (params ())
ALTER TABLE "new__auth_group" RENAME TO "auth_group"; (params ())
CREATE TABLE "customer_company" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(150) NOT NULL, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "name" varchar(100) NOT NULL, "phone" varchar(10) NOT NULL, "legal_address" varchar(100) NOT NULL, "actual_address" varchar(100) NOT NULL, "inn" varchar(12) NOT NULL, "kpp" varchar(9) NOT NULL, "ogrn" varchar(13) NOT NULL, "checking_account" varchar(20) NOT NULL, "correspondent_account" varchar(20) NOT NULL, "bik" varchar(9) NOT NULL, "bank_name" varchar(100) NOT NULL, "bank_address" varchar(100) NOT NULL, "is_agency" bool NOT NULL, "agency_id" bigint NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE TABLE "customer_company_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE TABLE "customer_placement" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "start_at" date NOT NULL, "duration" bigint NOT NULL, "invoice" varchar(100) NULL, "reconciliation" varchar(100) NULL, "contract_number" varchar(255) NULL, "installation_cost" integer NULL, "dismantling_cost" integer NULL, "production_cost" integer NULL, "placement_cost" integer NULL, "accruals" integer NULL, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "surface_id" bigint NOT NULL REFERENCES "ad_surface_surface" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE TABLE "customer_placementfile" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "file" varchar(100) NOT NULL, "placement_id" bigint NOT NULL REFERENCES "customer_placement" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE TABLE "new__customer_company" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(150) NOT NULL, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "name" varchar(100) NOT NULL, "phone" varchar(10) NOT NULL, "legal_address" varchar(100) NOT NULL, "actual_address" varchar(100) NOT NULL, "inn" varchar(12) NOT NULL, "kpp" varchar(9) NOT NULL, "ogrn" varchar(13) NOT NULL, "checking_account" varchar(20) NOT NULL, "correspondent_account" varchar(20) NOT NULL, "bik" varchar(9) NOT NULL, "bank_name" varchar(100) NOT NULL, "bank_address" varchar(100) NOT NULL, "is_agency" bool NOT NULL, "agency_id" bigint NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
INSERT INTO "new__customer_company" ("id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "name", "phone", "legal_address", "actual_address", "inn", "kpp", "ogrn", "checking_account", "correspondent_account", "bik", "bank_name", "bank_address", "is_agency", "agency_id") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "name", "phone", "legal_address", "actual_address", "inn", "kpp", "ogrn", "checking_account", "correspondent_account", "bik", "bank_name", "bank_address", "is_agency", "agency_id" FROM "customer_company"; (params ())
DROP TABLE "customer_company"; (params ())
ALTER TABLE "new__customer_company" RENAME TO "customer_company"; (params ())
CREATE UNIQUE INDEX "customer_company_groups_company_id_group_id_7f52136d_uniq" ON "customer_company_groups" ("company_id", "group_id"); (params ())
CREATE INDEX "customer_company_groups_company_id_56e18165" ON "customer_company_groups" ("company_id"); (params ())
CREATE INDEX "customer_company_groups_group_id_9292401f" ON "customer_company_groups" ("group_id"); (params ())
CREATE INDEX "customer_placement_company_id_99109aaf" ON "customer_placement" ("company_id"); (params ())
CREATE INDEX "customer_placement_surface_id_93fa38af" ON "customer_placement" ("surface_id"); (params ())
CREATE INDEX "customer_placementfile_placement_id_2973d3cd" ON "customer_placementfile" ("placement_id"); (params ())
CREATE INDEX "customer_company_agency_id_afc13802" ON "customer_company" ("agency_id"); (params ())
CREATE TABLE "customer_company_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE UNIQUE INDEX "customer_company_user_permissions_company_id_permission_id_e167c63d_uniq" ON "customer_company_user_permissions" ("company_id", "permission_id"); (params ())
CREATE INDEX "customer_company_user_permissions_company_id_2be8d4ee" ON "customer_company_user_permissions" ("company_id"); (params ())
CREATE INDEX "customer_company_user_permissions_permission_id_67a675dc" ON "customer_company_user_permissions" ("permission_id"); (params ())
CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params ())
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params ())
CREATE TABLE "new__django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL); (params None)
INSERT INTO "new__django_admin_log" ("id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time") SELECT "id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time" FROM "django_admin_log"; (params ())
DROP TABLE "django_admin_log"; (params ())
ALTER TABLE "new__django_admin_log" RENAME TO "django_admin_log"; (params ())
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params ())
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params ())
CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); (params None)
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params ())
(0.000) SELECT "customer_company"."id", "customer_company"."password", "customer_company"."last_login", "customer_company"."is_superuser", "customer_company"."username", "customer_company"."first_name", "customer_company"."last_name", "customer_company"."email", "customer_company"."is_staff", "customer_company"."is_active", "customer_company"."date_joined", "customer_company"."name", "customer_company"."phone", "customer_company"."legal_address", "customer_company"."actual_address", "customer_company"."inn", "customer_company"."kpp", "customer_company"."ogrn", "customer_company"."checking_account", "customer_company"."correspondent_account", "customer_company"."bik", "customer_company"."bank_name", "customer_company"."bank_address", "customer_company"."is_agency" FROM "customer_company" WHERE "customer_company"."id" = 1 LIMIT 21; args=(1,); alias=default
(0.000) SELECT "customer_placement"."id", "customer_placement"."surface_id", "customer_placement"."company_id", "customer_placement"."start_at", "customer_placement"."duration", "customer_placement"."invoice", "customer_placement"."reconciliation" FROM "customer_placement" WHERE "customer_placement"."company_id" IN (1); args=(1,); alias=default
(0.000) SELECT "ad_surface_surface"."id", "ad_surface_surface"."name" FROM "ad_surface_surface" WHERE "ad_surface_surface"."id" IN (1, 2); args=(1, 2); alias=default
CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); (params None)
CREATE TABLE "ad_surface_surface" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(255) NOT NULL, "description" text NOT NULL, "width" integer NOT NULL, "height" integer NOT NULL, "price" integer NOT NULL, "address" varchar(255) NOT NULL, "place" varchar(255) NOT NULL, "is_active" bool NOT NULL); (params None)
CREATE TABLE "ad_surface_surfaceimage" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "image" varchar(100) NOT NULL, "surface_id" bigint NOT NULL REFERENCES "ad_surface_surface" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE INDEX "ad_surface_surfaceimage_surface_id_45afaba5" ON "ad_surface_surfaceimage" ("surface_id"); (params ())
CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
CREATE TABLE "new__django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL); (params None)
INSERT INTO "new__django_content_type" ("id", "app_label", "model", "name") SELECT "id", "app_label", "model", "name" FROM "django_content_type"; (params ())
DROP TABLE "django_content_type"; (params ())
ALTER TABLE "new__django_content_type" RENAME TO "django_content_type"; (params ())
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
ALTER TABLE "django_content_type" DROP COLUMN "name"; (params ())
CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL); (params None)
CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); (params None)
CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params ())
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params ())
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id"); (params ())
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params ())
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params ())
CREATE TABLE "new__auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL); (params None)
INSERT INTO "new__auth_permission" ("id", "content_type_id", "codename", "name") SELECT "id", "content_type_id", "codename", "name" FROM "auth_permission"; (params ())
DROP TABLE "auth_permission"; (params ())
ALTER TABLE "new__auth_permission" RENAME TO "auth_permission"; (params ())
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params ())
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params ())
CREATE TABLE "new__auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE); (params None)
INSERT INTO "new__auth_group" ("id", "name") SELECT "id", "name" FROM "auth_group"; (params ())
DROP TABLE "auth_group"; (params ())
ALTER TABLE "new__auth_group" RENAME TO "auth_group"; (params ())
CREATE TABLE "customer_company" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(150) NOT NULL, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "name" varchar(100) NOT NULL, "phone" varchar(10) NOT NULL, "legal_address" varchar(100) NOT NULL, "actual_address" varchar(100) NOT NULL, "inn" varchar(12) NOT NULL, "kpp" varchar(9) NOT NULL, "ogrn" varchar(13) NOT NULL, "checking_account" varchar(20) NOT NULL, "correspondent_account" varchar(20) NOT NULL, "bik" varchar(9) NOT NULL, "bank_name" varchar(100) NOT NULL, "bank_address" varchar(100) NOT NULL, "is_agency" bool NOT NULL, "agency_id" bigint NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE TABLE "customer_company_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE TABLE "customer_placement" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "start_at" date NOT NULL, "duration" bigint NOT NULL, "invoice" varchar(100) NULL, "reconciliation" varchar(100) NULL, "contract_number" varchar(255) NULL, "installation_cost" integer NULL, "dismantling_cost" integer NULL, "production_cost" integer NULL, "placement_cost" integer NULL, "accruals" integer NULL, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "surface_id" bigint NOT NULL REFERENCES "ad_surface_surface" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE TABLE "customer_placementfile" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "file" varchar(100) NOT NULL, "placement_id" bigint NOT NULL REFERENCES "customer_placement" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE TABLE "new__customer_company" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(150) NOT NULL, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "name" varchar(100) NOT NULL, "phone" varchar(10) NOT NULL, "legal_address" varchar(100) NOT NULL, "actual_address" varchar(100) NOT NULL, "inn" varchar(12) NOT NULL, "kpp" varchar(9) NOT NULL, "ogrn" varchar(13) NOT NULL, "checking_account" varchar(20) NOT NULL, "correspondent_account" varchar(20) NOT NULL, "bik" varchar(9) NOT NULL, "bank_name" varchar(100) NOT NULL, "bank_address" varchar(100) NOT NULL, "is_agency" bool NOT NULL, "agency_id" bigint NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
INSERT INTO "new__customer_company" ("id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "name", "phone", "legal_address", "actual_address", "inn", "kpp", "ogrn", "checking_account", "correspondent_account", "bik", "bank_name", "bank_address", "is_agency", "agency_id") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "name", "phone", "legal_address", "actual_address", "inn", "kpp", "ogrn", "checking_account", "correspondent_account", "bik", "bank_name", "bank_address", "is_agency", "agency_id" FROM "customer_company"; (params ())
DROP TABLE "customer_company"; (params ())
ALTER TABLE "new__customer_company" RENAME TO "customer_company"; (params ())
CREATE UNIQUE INDEX "customer_company_groups_company_id_group_id_7f52136d_uniq" ON "customer_company_groups" ("company_id", "group_id"); (params ())
CREATE INDEX "customer_company_groups_company_id_56e18165" ON "customer_company_groups" ("company_id"); (params ())
CREATE INDEX "customer_company_groups_group_id_9292401f" ON "customer_company_groups" ("group_id"); (params ())
CREATE INDEX "customer_placement_company_id_99109aaf" ON "customer_placement" ("company_id"); (params ())
CREATE INDEX "customer_placement_surface_id_93fa38af" ON "customer_placement" ("surface_id"); (params ())
CREATE INDEX "customer_placementfile_placement_id_2973d3cd" ON "customer_placementfile" ("placement_id"); (params ())
CREATE INDEX "customer_company_agency_id_afc13802" ON "customer_company" ("agency_id"); (params ())
CREATE TABLE "customer_company_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE UNIQUE INDEX "customer_company_user_permissions_company_id_permission_id_e167c63d_uniq" ON "customer_company_user_permissions" ("company_id", "permission_id"); (params ())
CREATE INDEX "customer_company_user_permissions_company_id_2be8d4ee" ON "customer_company_user_permissions" ("company_id"); (params ())
CREATE INDEX "customer_company_user_permissions_permission_id_67a675dc" ON "customer_company_user_permissions" ("permission_id"); (params ())
CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params ())
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params ())
CREATE TABLE "new__django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL); (params None)
INSERT INTO "new__django_admin_log" ("id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time") SELECT "id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time" FROM "django_admin_log"; (params ())
DROP TABLE "django_admin_log"; (params ())
ALTER TABLE "new__django_admin_log" RENAME TO "django_admin_log"; (params ())
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params ())
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params ())
CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); (params None)
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params ())
(0.000) SELECT "customer_company"."id", "customer_company"."password", "customer_company"."last_login", "customer_company"."is_superuser", "customer_company"."username", "customer_company"."first_name", "customer_company"."last_name", "customer_company"."email", "customer_company"."is_staff", "customer_company"."is_active", "customer_company"."date_joined", "customer_company"."name", "customer_company"."phone", "customer_company"."legal_address", "customer_company"."actual_address", "customer_company"."inn", "customer_company"."kpp", "customer_company"."ogrn", "customer_company"."checking_account", "customer_company"."correspondent_account", "customer_company"."bik", "customer_company"."bank_name", "customer_company"."bank_address", "customer_company"."is_agency" FROM "customer_company" WHERE "customer_company"."id" = 1 LIMIT 21; args=(1,); alias=default
(0.000) SELECT "customer_placement"."id", "customer_placement"."surface_id", "customer_placement"."company_id", "customer_placement"."start_at", "customer_placement"."duration", "customer_placement"."invoice", "customer_placement"."reconciliation" FROM "customer_placement" WHERE "customer_placement"."company_id" IN (1); args=(1,); alias=default
(0.000) SELECT "ad_surface_surface"."id", "ad_surface_surface"."name" FROM "ad_surface_surface" WHERE "ad_surface_surface"."id" IN (1, 2); args=(1, 2); alias=default
CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); (params None)
CREATE TABLE "ad_surface_surface" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(255) NOT NULL, "description" text NOT NULL, "width" integer NOT NULL, "height" integer NOT NULL, "price" integer NOT NULL, "address" varchar(255) NOT NULL, "place" varchar(255) NOT NULL, "is_active" bool NOT NULL); (params None)
CREATE TABLE "ad_surface_surfaceimage" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "image" varchar(100) NOT NULL, "surface_id" bigint NOT NULL REFERENCES "ad_surface_surface" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE INDEX "ad_surface_surfaceimage_surface_id_45afaba5" ON "ad_surface_surfaceimage" ("surface_id"); (params ())
CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
CREATE TABLE "new__django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL); (params None)
INSERT INTO "new__django_content_type" ("id", "app_label", "model", "name") SELECT "id", "app_label", "model", "name" FROM "django_content_type"; (params ())
DROP TABLE "django_content_type"; (params ())
ALTER TABLE "new__django_content_type" RENAME TO "django_content_type"; (params ())
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
ALTER TABLE "django_content_type" DROP COLUMN "name"; (params ())
CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL); (params None)
CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); (params None)
CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params ())
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params ())
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id"); (params ())
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params ())
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params ())
CREATE TABLE "new__auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL); (params None)
INSERT INTO "new__auth_permission" ("id", "content_type_id", "codename", "name") SELECT "id", "content_type_id", "codename", "name" FROM "auth_permission"; (params ())
DROP TABLE "auth_permission"; (params ())
ALTER TABLE "new__auth_permission" RENAME TO "auth_permission"; (params ())
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params ())
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params ())
CREATE TABLE "new__auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE); (params None)
INSERT INTO "new__auth_group" ("id", "name") SELECT "id", "name" FROM "auth_group"; (params ())
DROP TABLE "auth_group"; (params ())
ALTER TABLE "new__auth_group" RENAME TO "auth_group"; (params ())
CREATE TABLE "customer_company" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(150) NOT NULL, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "name" varchar(100) NOT NULL, "phone" varchar(10) NOT NULL, "legal_address" varchar(100) NOT NULL, "actual_address" varchar(100) NOT NULL, "inn" varchar(12) NOT NULL, "kpp" varchar(9) NOT NULL, "ogrn" varchar(13) NOT NULL, "checking_account" varchar(20) NOT NULL, "correspondent_account" varchar(20) NOT NULL, "bik" varchar(9) NOT NULL, "bank_name" varchar(100) NOT NULL, "bank_address" varchar(100) NOT NULL, "is_agency" bool NOT NULL, "agency_id" bigint NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE TABLE "customer_company_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE TABLE "customer_placement" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "start_at" date NOT NULL, "duration" bigint NOT NULL, "invoice" varchar(100) NULL, "reconciliation" varchar(100) NULL, "contract_number" varchar(255) NULL, "installation_cost" integer NULL, "dismantling_cost" integer NULL, "production_cost" integer NULL, "placement_cost" integer NULL, "accruals" integer NULL, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "surface_id" bigint NOT NULL REFERENCES "ad_surface_surface" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE TABLE "customer_placementfile" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "file" varchar(100) NOT NULL, "placement_id" bigint NOT NULL REFERENCES "customer_placement" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE TABLE "new__customer_company" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(150) NOT NULL, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "name" varchar(100) NOT NULL, "phone" varchar(10) NOT NULL, "legal_address" varchar(100) NOT NULL, "actual_address" varchar(100) NOT NULL, "inn" varchar(12) NOT NULL, "kpp" varchar(9) NOT NULL, "ogrn" varchar(13) NOT NULL, "checking_account" varchar(20) NOT NULL, "correspondent_account" varchar(20) NOT NULL, "bik" varchar(9) NOT NULL, "bank_name" varchar(100) NOT NULL, "bank_address" varchar(100) NOT NULL, "is_agency" bool NOT NULL, "agency_id" bigint NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
INSERT INTO "new__customer_company" ("id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "name", "phone", "legal_address", "actual_address", "inn", "kpp", "ogrn", "checking_account", "correspondent_account", "bik", "bank_name", "bank_address", "is_agency", "agency_id") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "name", "phone", "legal_address", "actual_address", "inn", "kpp", "ogrn", "checking_account", "correspondent_account", "bik", "bank_name", "bank_address", "is_agency", "agency_id" FROM "customer_company"; (params ())
DROP TABLE "customer_company"; (params ())
ALTER TABLE "new__customer_company" RENAME TO "customer_company"; (params ())
CREATE UNIQUE INDEX "customer_company_groups_company_id_group_id_7f52136d_uniq" ON "customer_company_groups" ("company_id", "group_id"); (params ())
CREATE INDEX "customer_company_groups_company_id_56e18165" ON "customer_company_groups" ("company_id"); (params ())
CREATE INDEX "customer_company_groups_group_id_9292401f" ON "customer_company_groups" ("group_id"); (params ())
CREATE INDEX "customer_placement_company_id_99109aaf" ON "customer_placement" ("company_id"); (params ())
CREATE INDEX "customer_placement_surface_id_93fa38af" ON "customer_placement" ("surface_id"); (params ())
CREATE INDEX "customer_placementfile_placement_id_2973d3cd" ON "customer_placementfile" ("placement_id"); (params ())
CREATE INDEX "customer_company_agency_id_afc13802" ON "customer_company" ("agency_id"); (params ())
CREATE TABLE "customer_company_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "company_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE UNIQUE INDEX "customer_company_user_permissions_company_id_permission_id_e167c63d_uniq" ON "customer_company_user_permissions" ("company_id", "permission_id"); (params ())
CREATE INDEX "customer_company_user_permissions_company_id_2be8d4ee" ON "customer_company_user_permissions" ("company_id"); (params ())
CREATE INDEX "customer_company_user_permissions_permission_id_67a675dc" ON "customer_company_user_permissions" ("permission_id"); (params ())
CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params ())
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params ())
CREATE TABLE "new__django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "customer_company" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL); (params None)
INSERT INTO "new__django_admin_log" ("id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time") SELECT "id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time" FROM "django_admin_log"; (params ())
DROP TABLE "django_admin_log"; (params ())
ALTER TABLE "new__django_admin_log" RENAME TO "django_admin_log"; (params ())
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params ())
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params ())
CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); (params None)
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params ())
(0.000) SELECT "customer_company"."id", "customer_company"."password", "customer_company"."last_login", "customer_company"."is_superuser", "customer_company"."username", "customer_company"."first_name", "customer_company"."last_name", "customer_company"."email", "customer_company"."is_staff", "customer_company"."is_active", "customer_company"."date_joined", "customer_company"."name", "customer_company"."phone", "customer_company"."legal_address", "customer_company"."actual_address", "customer_company"."inn", "customer_company"."kpp", "customer_company"."ogrn", "customer_company"."checking_account", "customer_company"."correspondent_account", "customer_company"."bik", "customer_company"."bank_name", "customer_company"."bank_address", "customer_company"."is_agency" FROM "customer_company" WHERE "customer_company"."id" = 1 LIMIT 21; args=(1,); alias=default
(0.000) SELECT "customer_placement"."id", "customer_placement"."surface_id", "customer_placement"."company_id", "customer_placement"."start_at", "customer_placement"."duration", "customer_placement"."invoice", "customer_placement"."reconciliation" FROM "customer_placement" WHERE "customer_placement"."company_id" IN (1); args=(1,); alias=default
(0.000) SELECT "ad_surface_surface"."id", "ad_surface_surface"."name" FROM "ad_surface_surface" WHERE "ad_surface_surface"."id" IN (1, 2); args=(1, 2); alias=default
(0.001) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
(0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
(0.001) SELECT "customer_company"."id", "customer_company"."password", "customer_company"."last_login", "customer_company"."is_superuser", "customer_company"."username", "customer_company"."first_name", "customer_company"."last_name", "customer_company"."email", "customer_company"."is_staff", "customer_company"."is_active", "customer_company"."date_joined", "customer_company"."name", "customer_company"."phone", "customer_company"."legal_address", "customer_company"."actual_address", "customer_company"."inn", "customer_company"."kpp", "customer_company"."ogrn", "customer_company"."checking_account", "customer_company"."correspondent_account", "customer_company"."bik", "customer_company"."bank_name", "customer_company"."bank_address", "customer_company"."is_agency", "customer_company"."agency_id" FROM "customer_company" WHERE "customer_company"."username" = 'admin' LIMIT 21; args=('admin',); alias=default
(0.113) INSERT INTO "customer_company" ("password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "name", "phone", "legal_address", "actual_address", "inn", "kpp", "ogrn", "checking_account", "correspondent_account", "bik", "bank_name", "bank_address", "is_agency", "agency_id") VALUES ('pbkdf2_sha256$600000$91NKN60u2e4ppSuvwi2OLv$MmDRa63hqtipXqZc7GKwTJbMSDAt57vcV8nQAN8YnYs=', NULL, 1, 'admin', '', '', '', 1, 1, '2024-02-26 13:46:51.813949', '', '', '', '', '', '', '', '', '', '', '', '', 0, NULL) RETURNING "customer_company"."id"; args=('pbkdf2_sha256$600000$91NKN60u2e4ppSuvwi2OLv$MmDRa63hqtipXqZc7GKwTJbMSDAt57vcV8nQAN8YnYs=', None, True, 'admin', '', '', '', True, True, '2024-02-26 13:46:51.813949', '', '', '', '', '', '', '', '', '', '', '', '', False, None); alias=default
